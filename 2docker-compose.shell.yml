volumes:
  mysqldata: {}
  keycloak_data: {}
  azurite_data: {}


services:
  app:
    build:
      context: _fixtures/dockershell
      dockerfile: Dockerfile
      args:
        NODE_VERSION: 18
        NPM_VERSION: 9
        NESTJS_VERSION: 10
        NG_VERSION: 17
        NX_VERSION: 17
    # Makes the docker container/image list easier to read
    image: ${COMPOSE_PROJECT_NAME:-shopfloorio}-dockershell
    # This gives us a nice name for the host in the container shell instead of app@dfeb636a
    hostname: ${COMPOSE_PROJECT_NAME:-shopfloorio}-dockershell
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    working_dir: /app
    depends_on:
      # - reverse-proxy
      # - entrypoint
      - db
      - phpmyadmin
      - azurite

      # Example for a separate database for a specific service
      # - db-backend2
    volumes:
      - ./:/app
      - ~/.npmrc:/root/.npmrc
      - ~/.npmrc:/home/node/.npmrc
      - ~/.npm/:/home/node/.npm
      # - '${SSH_AUTH_SOCK:-/tmp/_ssh_auth_sock_stub}:/mnt/ssh-auth.sock'
    ports:
      # This is not the whole range of backend/frontend ports, but more ports slow down
      # the container start noticeably. Expand as needed.
      - '13000-13015:13000-13015'
      - '13030-13045:13030-13045'
      - '19200-19215:19200-19215'
    environment:
      # General settings
      SSH_AUTH_SOCK: /mnt/ssh-auth.sock

      APP_IS_DOCKERSHELL: 'true'

      # ---
      # Ports of services, see README.md for more information
      # ---
      APP_PORT_ASSET: 13001
      APP_PORT_FILE: 13003
      APP_PORT_HUB: 13004
      APP_PORT_TENANT: 13006
      APP_PORT_USER: 13007
      APP_PORT_GPT_CHATBOT: 13008


      # Other configurations (db's, ...)
      APP_DB_HOST: db
      APP_DB_USER: app
      APP_DB_PASS: app
      APP_DB_NAME: app
      APP_TEST_DB_HOST: db-testing
      APP_TEST_DB_USER: root
      APP_TEST_DB_PASS: root
      APP_TEST_DB_NAME: app-testing
      APP_FILESERVICE_STORAGE_ADAPTER: fs
      APP_HTTP_SCHEME: ${SIO_EXTERNAL_SCHEME:-http}
      APP_HOSTNAME: ${SIO_EXTERNAL_HOSTNAMEPORT:-localhost}
      APP_KEYCLOAK_BASE_URL: http://keycloak:8080/auth
      APP_KEYCLOAK_REALM_NAME: shopfloor-dev
      APP_KEYCLOAK_CLIENT_ID: shopfloor-identity-backend
      APP_KEYCLOAK_CLIENT_SECRET: d0d30608-438b-417d-ab22-318c8c8f3c71
      INIT_KC_BASE_URL: http://keycloak:8080/auth
      INIT_KC_USERNAME: admin
      INIT_KC_PASSWORD: admin
      INIT_KC_REALM_NAME: shopfloor-dev
      INIT_KC_IDENTITY_BACKEND_CLIENT_ID: shopfloor-identity-backend
      INIT_KC_IDENTITY_BACKEND_CLIENT_SECRET: d0d30608-438b-417d-ab22-318c8c8f3c71
      INIT_KC_OAUTH2_BACKEND_CLIENT_ID: oauth2-proxy
      INIT_KC_OAUTH2_BACKEND_CLIENT_SECRET: shopfloorio-dev-oauth2-topsecret
      SIO_INIT_DEFAULT_USERNAME: sio_admin
      SIO_INIT_DEFAULT_PASSWORD: sio_admin

      # Azurite
      APP_AZ_BLOBSTORE_ACCOUNT: devstoreaccount1
      APP_AZ_BLOBSTORE_ACCOUNTURL: http://azurite:10001/devstoreaccount1
      APP_AZ_BLOBSTORE_ACCOUNTKEY: Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==

      # Example for a separate database for a specific service
      # APP_DB_HOST_BACKEND2: db-backend2
      # APP_DB_USER_BACKEND2: app
      # APP_DB_PASS_BACKEND2: app
      # APP_DB_NAME_BACKEND2: app
    logging:
      options:
        max-size: 10m

  db:
      image: mysql:8.0.28-oracle
      hostname: db
      ports:
        - 13060:3306
      command:
        - '--character-set-server=utf8mb4'
        - '--collation-server=utf8mb4_unicode_ci'
        - '--authentication_policy=mysql_native_password'
      environment:
        MYSQL_DATABASE: app
        MYSQL_USER: app
        MYSQL_PASSWORD: app
        MYSQL_ROOT_PASSWORD: root
      volumes:
        - mysqldata:/var/lib/mysql
      logging:
        options:
          max-size: 10m

  azurite:
      image: mcr.microsoft.com/azure-storage/azurite:3.29.0
      command:
        - "azurite-blob"
        - "--blobHost=0.0.0.0"
        # Prevent conflict with file-backend Azurite service
        - "--blobPort=10001"
        - "--location=/data"
      ports:
        - 13095:10001
      volumes:
        - azurite_data:/data
      logging:
        options:
          max-size: 10m

  phpmyadmin:
    # ARM64 compatible image
    image: linuxserver/phpmyadmin
    hostname: phpmyadmin
    ports:
      - 13079:80
    environment:
      PMA_HOSTS: >-
        db,
        db-testing,
      # Example for a separate database for a specific service
      # db-backend2,
      PMA_USER: root
      PMA_PASSWORD: root
      UPLOAD_LIMIT: 1024M
    labels:
      traefik.enable: 'true'
      traefik.tags: ${COMPOSE_PROJECT_NAME:-shopfloorio}-dev
      traefik.http.routers.phpmyadmin.rule: PathPrefix(`/phpmyadmin`) || PathPrefix(`/pma`)
      traefik.http.routers.phpmyadmin.entrypoints: http
      traefik.http.routers.phpmyadmin.service: phpmyadmin
      traefik.http.services.phpmyadmin.loadbalancer.server.port: 80
      traefik.http.middlewares.phpmyadmin-stripprefix.stripprefix.prefixes: /phpmyadmin,/pma
      traefik.http.middlewares.phpmyadmin-stripprefix.stripprefix.forceSlash: false
      # When there is no trailing slash, the user gets a blank screen because resource files are loaded with the wrong URL
      # This redirect adds a trailing slash to the prefixes.
      traefik.http.middlewares.phpmyadmin-trailingslash-redirect.redirectregex.regex: '^https?://[^/]+/(phpmyadmin|pma)$$'
      traefik.http.middlewares.phpmyadmin-trailingslash-redirect.redirectregex.replacement: '${SIO_EXTERNAL_SCHEME:-http}://${SIO_EXTERNAL_HOSTNAMEPORT:-localhost}/$${1}/'
      traefik.http.routers.phpmyadmin.middlewares: phpmyadmin-trailingslash-redirect,phpmyadmin-stripprefix
    logging:
      options:
        max-size: 10m

  # entrypoint:
  #   image: nginx:1.23-alpine
  #   depends_on:
  #     - reverse-proxy
  #   volumes:
  #     - ./_fixtures/dockershell/entrypoint/:/etc/nginx/templates/:ro
  #     - ./_fixtures/dockershell/entrypoint/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./_fixtures/dockershell/entrypoint/certs/:/etc/nginx/certs/:ro
  #     - ./_fixtures/dockershell/entrypoint/99-entrypoint-conditional-ssl.sh:/docker-entrypoint.d/99-entrypoint-conditional-ssl.sh:ro
  #   ports:
  #     - '${SIO_EXTERNAL_PORT:-80}:80'
  #   environment:
  #     SIO_EXTERNAL_SCHEME: ${SIO_EXTERNAL_SCHEME:-http}
  #     SIO_EXTERNAL_HOSTNAME: ${SIO_EXTERNAL_HOSTNAME:-localhost}
  #     SIO_EXTERNAL_PORT: ${SIO_EXTERNAL_PORT:-80}
  #     SIO_EXTERNAL_HOSTNAMEPORT: ${SIO_EXTERNAL_HOSTNAMEPORT:-localhost}
  #   logging:
  #     options:
  #       max-size: 10m

  # reverse-proxy:
  #   image: traefik:v2.9
  #   extra_hosts:
  #     - 'host.docker.internal:host-gateway'
  #   ports:
  #     - '13088:8080'
  #   command:
  #     - '--log.level=DEBUG'
  #     - '--providers.file'
  #     - '--providers.file.directory=/etc/traefik-dynamic/'
  #     - '--providers.file.watch=true'
  #     - '--providers.docker'
  #     - '--providers.docker.exposedbydefault=false'
  #     - '--providers.docker.constraints=Label(`traefik.tags`,`${COMPOSE_PROJECT_NAME:-shopfloorio}-dev`)'
  #     - '--api.dashboard=true'
  #     # Don't do this in production!
  #     - '--api.insecure=true'
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - ./_fixtures/dockershell/traefik/:/etc/traefik-dynamic/:ro
  #   # Make these available to the Traefik configuration file templating
  #   environment:
  #     SIO_EXTERNAL_SCHEME: ${SIO_EXTERNAL_SCHEME:-http}
  #     SIO_EXTERNAL_HOSTNAME: ${SIO_EXTERNAL_HOSTNAME:-localhost}
  #     SIO_EXTERNAL_PORT: ${SIO_EXTERNAL_PORT:-80}
  #     SIO_EXTERNAL_HOSTNAMEPORT: ${SIO_EXTERNAL_HOSTNAMEPORT:-localhost}
  #   logging:
  #     options:
  #       max-size: 10m

  

  # Example for a separate database for a specific service
  # db-backend2:
  #   image: mysql:8.0.28-oracle
  #   hostname: db-backend2
  #   ports:
  #     - 13062:3306
  #   command:
  #     - "--character-set-server=utf8mb4"
  #     - "--collation-server=utf8mb4_unicode_ci"
  #     - "--authentication_policy=mysql_native_password"
  #   environment:
  #     MYSQL_DATABASE: app
  #     MYSQL_USER: app
  #     MYSQL_PASSWORD: app
  #     MYSQL_ROOT_PASSWORD: root
  #   volumes:
  #     - mysqldata_backend2:/var/lib/mysql
  #   logging:
  #     options:
  #       max-size: 10m



 
